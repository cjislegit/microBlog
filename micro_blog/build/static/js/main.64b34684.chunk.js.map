{"version":3,"sources":["NavBar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","handleDelete","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b34684.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar'>\r\n      <h1>Micro Blog</h1>\r\n      <div className='links'>\r\n        <Link to='/'>Home</Link>\r\n        <Link\r\n          to='/create'\r\n          style={{\r\n            color: 'white',\r\n            backgroundColor: '#f1356d',\r\n            borderRadius: '8px',\r\n          }}\r\n        >\r\n          New Blog\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs, handleDelete }) => {\r\n  return (\r\n    <div className='blog-list'>\r\n      {blogs.map((blog) => (\r\n        <div className='blog-preview' key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{blog.title}</h2>\r\n            <p>Written by: {blog.author}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController(); //Sets up new AbortController\r\n\r\n    fetch(url, { signal: abortCont.signal }) //Attaches abortCont to this fetch\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error('Could not fetch the data');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === 'AbortError') {\r\n          //Prevents the error from being thrown if it is an AbortError\r\n          console.log('Fetch Aboarted');\r\n        } else {\r\n          setError(err.message);\r\n          setIsPending(false);\r\n        }\r\n      });\r\n\r\n    return () => abortCont.abort(); //Runs abortCont when the component is unmounted\r\n  }, [url]);\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n\r\n// Start server\r\n// npx json-server --watch data/db.json --port 8000\r\n","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n  const { data, isPending, error } = useFetch('http://localhost:8000/blogs');\r\n\r\n  // const [blogs, setBlogs] = useState(null);\r\n  // const [isPending, setIsPending] = useState(true);\r\n  // const [error, setError] = useState(null);\r\n\r\n  // const [name, setName] = useState('Mia');\r\n\r\n  // const handleNameChange = () => {\r\n  //   setName('Goose');\r\n  // };\r\n\r\n  // Runs on every render\r\n  // useEffect(() => {\r\n  //   console.log('Use effect ran');\r\n  // });\r\n\r\n  // Runs on first render\r\n  // useEffect(() => {\r\n  //   fetch('http://localhost:8000/blogs')\r\n  //     .then((res) => {\r\n  //       if (!res.ok) {\r\n  //         throw Error('Could not fetch the data');\r\n  //       }\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((data) => {\r\n  //       setBlogs(data);\r\n  //       setIsPending(false);\r\n  //       setError(null);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       setError(err.message);\r\n  //       setIsPending(false);\r\n  //     });\r\n  // }, []);\r\n\r\n  // // Runs on when name is rendered\r\n  // useEffect(() => {\r\n  //   console.log('First render or name change.');\r\n  // }, [name]);\r\n\r\n  return (\r\n    <div className='home'>\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {data && <BlogList blogs={data} />}\r\n      {/* <button onClick={handleNameChange}>Change Name</button>\r\n      <p>{name}</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('Mario');\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n    setIsPending(true);\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { 'content-type': 'application/json' },\r\n      body: JSON.stringify(blog),\r\n    }).then(() => {\r\n      console.log('New blog added!');\r\n      setIsPending(false);\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='create'>\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog Title:</label>\r\n        <input\r\n          type='text'\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog Body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog Author:</label>\r\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\r\n          <option value='Mario'>Mario</option>\r\n          <option value='Yoshi'>Yoshi</option>\r\n        </select>\r\n        {!isPending && <button>Add Blog</button>}\r\n        {isPending && <button disabled>Adding Blog</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import { useHistory, useParams } from 'react-router-dom';\r\nimport useFetch from './useFetch';\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    data: blog,\r\n    error,\r\n    isPending,\r\n  } = useFetch('http://localhost:8000/blogs/' + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='blog-details'>\r\n      {isPending && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p>Written by {blog.author}</p>\r\n          <div>{blog.body}</div>\r\n          <button onClick={handleClick}>Delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-foud'>\r\n      <h2>Sorry</h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to='/'>Back to the Homepage</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from './NavBar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='content'>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/create'>\n              <Create />\n            </Route>\n            <Route path='/blogs/:id'>\n              <BlogDetails />\n            </Route>\n            <Route path='*'>\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}